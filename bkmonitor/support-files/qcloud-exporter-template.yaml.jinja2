---
# Source: qcloud-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ release_name }}-qcloud-exporter
  labels:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
    app.kubernetes.io/version: "{{ plugin.version }}"
    app.kubernetes.io/managed-by: bk-monitor
automountServiceAccountToken: true
---
# Source: qcloud-exporter/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ release_name }}-qcloud-exporter
  labels:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
    app.kubernetes.io/version: "{{ plugin.version }}"
    app.kubernetes.io/managed-by: bk-monitor
data:
  config.yaml: |
    credential:
      access_key: "{{ values.secret_id}}"
      secret_key: "{{ values.secret_key }}"
      region: "{{ values.region }}"

    rate_limit: 15

    products:
    {% for ns in values.namespaces.split(',') %}
      - namespace: "{{ ns }}"
        all_metrics: true
        all_instances: true
    {% endfor %}
---
# Source: qcloud-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ release_name }}-qcloud-exporter
  labels:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
    app.kubernetes.io/version: "{{ plugin.version }}"
    app.kubernetes.io/managed-by: bk-monitor
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
---
# Source: qcloud-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ release_name }}-qcloud-exporter
  labels:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
    app.kubernetes.io/version: "{{ plugin.version }}"
    app.kubernetes.io/managed-by: bk-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qcloud-exporter
      app.kubernetes.io/instance: {{ release_name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qcloud-exporter
        app.kubernetes.io/instance: {{ release_name }}
        app.kubernetes.io/version: "{{ plugin.version }}"
        app.kubernetes.io/managed-by: bk-monitor
    spec:
      serviceAccountName: {{ release_name }}-qcloud-exporter
      securityContext: {}
      containers:
        - name: qcloud-exporter
          securityContext:
            {}
          image: {{ values.image }}
          imagePullPolicy: IfNotPresent
          command:
            - qcloud_exporter
            - --config.file=/app/config.yaml
          ports:
            - name: http
              containerPort: 9123
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: {{ values.limits.cpu }}
              memory: {{ values.limits.memory }}
            requests:
              cpu: {{ values.requests.cpu }}
              memory: {{ values.requests.memory }}
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              readOnly: true
              subPath: config.yaml
      volumes:
        - name: config
          configMap:
            name: {{ release_name }}-qcloud-exporter
            defaultMode: 420
---
# Source: qcloud-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ release_name }}-qcloud-exporter
  labels:
    app.kubernetes.io/name: qcloud-exporter
    app.kubernetes.io/instance: {{ release_name }}
    app.kubernetes.io/version: "{{ plugin.version }}"
    app.kubernetes.io/managed-by: bk-monitor
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: qcloud-exporter
      app.kubernetes.io/instance: {{ release_name }}
  endpoints:
    - port: http
      path: /metrics
      interval: {{ collect.period }}s
      scrapeTimeout: {{ collect.timeout }}s
      honorLabels: false
      # 插入采集配置ID及业务ID
      relabelings:
        - targetLabel: "collect_config_id"
          replacement: "{{ collect.id }}"
        - targetLabel: "bk_biz_id"
          replacement: "{{ bk_biz_id }}"
  namespaceSelector:
    matchNames:
    - {{ namespace }}
