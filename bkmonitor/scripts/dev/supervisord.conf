[unix_http_server]
file = /app/run/supervisord.sock

[supervisorctl]
configuration = /app/etc/supervisord.conf
serverurl = unix:///app/run/supervisord.sock

[supervisord]
pidfile = /app/run/supervisord.pid
logfile = /app/logs/supervisord.log
directory = /app/

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:runserver]
command = python manage.py runserver 0.0.0.0:80
directory = /app/code/
stdout_logfile = /app/logs/runserver.log
redirect_stderr = true
autostart = true
autorestart = true
stopasgroup = true
stopsignal = KILL

; 默认不启动，在需要调试异步任务时，可以打开
[program:web_celery_worker]
command = python manage.py celery worker -l INFO -c 2
directory = /app/code/
stdout_logfile = /app/logs/celery.log
redirect_stderr = true
stopwaitsecs = 10
autostart = false
autorestart = true
stopasgroup = true
stopsignal = QUIT

; 默认不启动，在需要调试异步任务时，可以打开
[program:web_celery_resource_worker]
command = python manage.py celery worker -l INFO -Q celery_resource -c 1
directory = /app/code
stdout_logfile = /app/logs/celery.log
redirect_stderr = true
stopwaitsecs = 10
autostart = false
autorestart = true
stopasgroup = true
stopsignal = QUIT

; 默认不启动，在需要调试周期任务时，可以打开
[program:web_celery_beat]
command = python manage.py celery beat
directory = /app/code
stdout_logfile = /app/logs/beat.log
redirect_stderr = true
stopwaitsecs = 10
autostart = false
autorestart = true
stopasgroup = true
stopsignal = QUIT

[program:code_server]
command = code-server /app/ --config=/app/etc/code-server.yaml
directory = /app/
stdout_logfile = /app/logs/code-server.log
redirect_stderr = true
stopwaitsecs = 10
autostart = true
autorestart = true
stopasgroup = true
stopsignal = QUIT
