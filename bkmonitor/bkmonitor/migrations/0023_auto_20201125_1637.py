# -*- coding: utf-8 -*-
"""
Tencent is pleased to support the open source community by making 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
Copyright (C) 2017-2025 Tencent. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 1.11.23 on 2020-11-25 08:37


import bkmonitor.utils.db.fields
from django.db import migrations, models


init_sql = """
UPDATE `dict_base_alarm` set dimensions='["process","message"]' where title='oom-gse';
UPDATE `dict_base_alarm` set dimensions='["corefile"]' where title='corefile-gse';
UPDATE `dict_base_alarm` set dimensions='["position","fs", "type"]' where title='disk-readonly-gse';
UPDATE `dict_base_alarm` set dimensions='["fstype","disk", "file_system"]' where title='disk-full-gse';
"""


class Migration(migrations.Migration):

    dependencies = [
        ("bkmonitor", "0022_basealarm_data_append_oom"),
    ]

    operations = [
        migrations.AddField(
            model_name="basealarm",
            name="dimensions",
            field=bkmonitor.utils.db.fields.JsonField(default=list, verbose_name="维度"),
        ),
        migrations.CreateModel(
            name="BaseAlarmQueryConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                ("is_deleted", models.BooleanField(default=False, verbose_name="是否删除")),
                ("create_user", models.CharField(blank=True, default="", max_length=32, verbose_name="创建人")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("update_user", models.CharField(blank=True, default="", max_length=32, verbose_name="最后修改人")),
                ("update_time", models.DateTimeField(auto_now=True, verbose_name="最后修改时间")),
                ("agg_condition", bkmonitor.utils.db.fields.JsonField(default=list, verbose_name="过滤条件")),
            ],
            options={
                "verbose_name": "系统事件查询配置",
                "verbose_name_plural": "系统事件查询配置",
                "db_table": "alarm_base_alarm_config",
            },
        ),
        migrations.AlterField(
            model_name="detectalgorithm",
            name="algorithm_type",
            field=models.CharField(
                choices=[
                    ("Threshold", "静态阈值算法"),
                    ("SimpleRingRatio", "简易环比算法"),
                    ("AdvancedRingRatio", "高级环比算法"),
                    ("SimpleYearRound", "简易同比算法"),
                    ("AdvancedYearRound", "高级同比算法"),
                    ("PartialNodes", "部分节点数算法"),
                    ("OsRestart", "主机重启算法"),
                    ("ProcPort", "进程端口算法"),
                    ("PingUnreachable", "Ping不可达算法"),
                    ("YearRoundAmplitude", "同比振幅算法"),
                    ("YearRoundRange", "同比区间算法"),
                    ("RingRatioAmplitude", "环比振幅算法"),
                ],
                max_length=128,
                verbose_name="算法类型",
            ),
        ),
        migrations.RunSQL(init_sql),
    ]
