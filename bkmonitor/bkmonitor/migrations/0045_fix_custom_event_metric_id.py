# -*- coding: utf-8 -*-
"""
Tencent is pleased to support the open source community by making 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
Copyright (C) 2017-2025 Tencent. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 1.11.23 on 2021-08-13 03:08
from __future__ import unicode_literals

from collections import defaultdict
from functools import reduce

from django.db import migrations, transaction
from django.db.models import Count, Q


@transaction.atomic
def fix_custom_event_metric_id(apps, *args, **kwargs):
    """
    多指标策略指标信息修复
    """
    QueryConfigModel = apps.get_model("bkmonitor", "QueryConfigModel")
    query_configs = QueryConfigModel.objects.filter(data_source_label="custom", data_type_label="event")
    for query_config in query_configs:
        query_config.metric_id = (
            f"custom.event.{query_config.config['result_table_id']}.{query_config.config['custom_event_name']}"
        )
        query_config.save()


class Migration(migrations.Migration):

    dependencies = [
        ("bkmonitor", "0044_fix_item_name"),
    ]

    operations = [migrations.RunPython(fix_custom_event_metric_id)]
