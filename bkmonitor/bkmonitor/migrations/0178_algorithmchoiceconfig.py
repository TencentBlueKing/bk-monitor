# Generated by Django 3.2.25 on 2025-04-08 10:06

from django.db import migrations, models

def insert_initial_data(apps, *args, **kwargs):
    AlgorithmChoiceConfig = apps.get_model("bkmonitor", "AlgorithmChoiceConfig")
    config_list=[
        AlgorithmChoiceConfig(
            id=1,
            alias='单指标异常检测',
            name='general_anomaly_detection',
            document="敏感度越高，检测出的异常越多；敏感度越低，检测出的异常越少- 数据频率：```任意```- 历史数据长度：```2天```。充足的历史数据能使模型提取到更准确的异常特征，历史数据不足2天时，检测准确度会有所下降。- 模型生效时间：后台创建策略耗时```10分钟```，创建后即时生效。- 效果不满意？   + 对于成功率和失败率类数据，用简单的阈值可能更直接更准确   + 对于波动很强的时序数据，不妨试着调低敏感度（1-2），可以减少过于敏感的告警   + 通过反馈页面的 *反馈* 进行反馈",
            description='单指标异常检测考虑了不同类型曲线（周期型、稳定型、稀疏型）的特征，可以满足机器指标、业务指标等时序数据的异常检测需求',
            is_default=True,
            instruction='>**单指标异常检测**是采用了时间序列特征提取和深度贝叶斯学习的异常检测方案\n\n**单指标异常检测**考虑了不同类型曲线（```周期型```、```稳定型```、```稀疏型```）的特征，可以满足```机器指标```、```业务指标```等时序数据的异常检测需求。\n\n**单指标异常检测**的检测流程分为```异常模式提取```和```有监督异常检测```两部分：\n\n- 在```异常模式提取```阶段，基于概率论、极值理论、残差理论等，从时序数据中提取能多方面表征数据异常模式的特征。\n- 在```有监督异常检测```阶段，采用基于主动学习的深度贝叶斯模型，能够在异常检测的同时，根据用户反馈学习未知的异常模式和部分用户偏好。',
            variable_info={'parameter': [{'variable_name': '$alert_down', 'variable_alias': '下降告警', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '1', 'variable_value': '1', 'constraint': [[{'allow_null': False, 'input_type': 'int'}]], 'description': '若不希望收到下降异常告警，请关闭', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '检测到下降异常时进行告警', 'multiple': False}}, {'variable_name': '$alert_slight_shake', 'variable_alias': '轻微抖动告警', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '0', 'variable_value': '0', 'constraint': [[{'allow_null': False, 'input_type': 'int'}]], 'description': '若希望收到轻微抖动异常告警，请打开', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '若希望收到轻微抖动异常告警，请打开', 'multiple': False}}, {'variable_name': '$alert_upward', 'variable_alias': '上升告警', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '1', 'variable_value': '1', 'constraint': [[{'allow_null': False, 'input_type': 'int'}]], 'description': '若不希望收到上升异常告警，请关闭', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '检测到上升异常时进行告警', 'multiple': False}}, {'variable_name': '$sensitivity', 'variable_alias': '敏感度', 'variable_type': 'parameter', 'value_type': 'double', 'default_value': '5', 'variable_value': '5', 'constraint': [[{'allow_null': False, 'input_type': 'double'}]], 'description': '敏感度越高，告警越多。对于平滑曲线，建议使用默认敏感度；对于波动曲线，建议调低敏感度', 'sensitivity': 'public', 'properties': {'input_type': 'range', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [], 'used_by': 'user', 'max': 10, 'min': 0, 'closed': 'all', 'is_required': False, 'placeholder': '敏感度越高告警越多，敏感度越低告警越少', 'multiple': False}}]},
            ts_freq=0,
            algorithm='IntelligentDetect',
            config={},
        ),AlgorithmChoiceConfig(
            id=2,
            alias='离群点检测',
            name='abnormal_cluster',
            document='**数据频率：** 任意**依赖历史数据长度：** 无需依赖历史数据**什么时候能看到检测结果数据：** 即时可以看到，注意Flow接入大概要10分钟训练周期**手动触发效果不满意怎么办：** ① 尝试更改参数；② 通过告警单的【误警】进行反馈；③ 联系算法开发人员算法开发人员',
            description='离群检测用于检测在一组提供服务的节点中，CPU或者内存使用量与其余节点产生较大差距的节点。',
            is_default=False,
            instruction='**适用情况**：适用于需要根据单指标数据各维度的数据分布情况来判断异常的情况。\n**如何使用**：用户可以通过调整敏感度来对应不同离散程度的指标值分布情况，共11档。模型会实时计算当前指标在各维度的分布情况，当某个维度的指标值超出了用户设置的敏感度对应的范围区间时，便会触发告警。\n',
            variable_info={'parameter': [{'variable_name': '$cluster', 'variable_alias': '分群字段', 'variable_type': 'parameter', 'value_type': 'string', 'default_value': '', 'variable_value': None, 'constraint': [[{'allow_null': False, 'input_type': 'string'}]], 'description': '用于分群的字段，多个字段用,分割', 'sensitivity': 'public', 'properties': {}}, {'variable_name': '$sensitivity', 'variable_alias': '敏感度', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '5', 'variable_value': None, 'constraint': [[{'allow_null': False, 'input_type': 'int'}]], 'description': '越大越容易检测出离群', 'sensitivity': 'public', 'properties': {'input_type': 'range', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [], 'used_by': 'user', 'max': 10, 'min': 0, 'closed': 'all', 'is_required': False, 'placeholder': 'u8d8au5c0fu8d8au5bb9u6613u68c0u6d4bu51fau79bbu7fa4', 'multiple': False}}]},
            ts_freq=0,
            algorithm='AbnormalCluster',
            config={},
        ),AlgorithmChoiceConfig(
            id=3,
            alias='通用时间序列预测_小时粒度',
            name='general_time_series_forecasting_hour',
            document='- 数据频率：```任意```- 历史数据长度：```14天```。充足的历史数据能使模型获得更丰富的时序信息，历史数据不足```14天```时，预测效果会有所下降。- 模型生效时间：后台创建策略耗时```10分钟```，创建后即时生效。',
            description='general_time_series_forecasting 是一种基于Transformer的时间序列预测方法。可以满足如CPU、磁盘利用、在线人数等各类大型在线业务的时序预测需求。',
            is_default=False,
            instruction='**通用时间序列预测**是一种基于Transformer的通用长时间序列预测方案\n\n**通用时间序列预测**方案利用大量的不同类型曲线（```周期型```、```稳定型```、```趋势型```）训练得到，可以满足```机器指标```、```业务指标```等时序数据的长时间预测需求。\n\n**通用时间序列预测_小时粒度**可以预测未来最长```7天```的时序数据，预测值为```当前时间点```到```7天后```的时序数据，以```小时```为最小粒度。',
            variable_info={'parameter': [{'variable_name': '$forecast_mode', 'variable_alias': '预测模式', 'variable_type': 'parameter', 'value_type': 'string', 'default_value': 'accurate', 'variable_value': 'accurate', 'constraint': [[{'allow_null': False, 'input_type': 'string'}]], 'description': '', 'sensitivity': 'public', 'properties': {'input_type': 'select', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 'accurate', 'allowed_alias': '精确预测（提供对未来数据尽可能准确的波动预测 ）', 'description': '精确预测（提供对未来数据尽可能准确的波动预测 ）'}, {'allowed_value': 'trend', 'allowed_alias': '趋势预测（提供对未来数据的线性趋势预测）', 'description': '趋势预测（提供对未来数据的线性趋势预测）'}], 'used_by': 'user', 'closed': None, 'is_required': True, 'placeholder': '趋势预测提供对未来数据的线性趋势预测；准确预测提供对未来数据尽可能准确的波动预测', 'multiple': False}}, {'variable_name': '$range_level', 'variable_alias': '上下界范围', 'variable_type': 'parameter', 'value_type': 'string', 'default_value': 'middle', 'variable_value': 'middle', 'constraint': [[{'allow_null': False, 'input_type': 'string'}]], 'description': '', 'sensitivity': 'public', 'properties': {'input_type': 'select', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 'small', 'allowed_alias': '小', 'description': '小'}, {'allowed_value': 'middle', 'allowed_alias': '中', 'description': '中'}, {'allowed_value': 'large', 'allowed_alias': '大', 'description': '大'}], 'used_by': 'user', 'closed': None, 'is_required': True, 'placeholder': '指定预测上下界范围的程度，提供了大、中、小三档', 'multiple': False}}]},
            ts_freq=0,
            algorithm='TimeSeriesForecasting',
            config={},
        ),AlgorithmChoiceConfig(
            id=4,
            alias='主机多指标异常检测评级',
            name='host_ad_multi_level',
            document='**适用情况**：适用于需要对指定的多个主机内的多个指标数据的异常波动进行批量检测的情况。\n\n**使用方法**：在策略配置页指定好待检测的指标和主机即可。模型会实时扫描目标主机的多个指标数据（目前是指定的十个主要指标，包含CPU、MEM、DISK、IO等，按avg方式聚合至IP维度），如果检出多个指标异常，将以发生异常的主机为单位生成告警。\n\n**数据频率**：任意\n**数据长度**：新接入的业务，前24小时会累积历史数据用来做预测，所以前24小时不会检出异常，但是会有正常数据输出。充足的历史数据能使模型提取到更准确的异常特征，历史数据不足2天时，检测准确度会小幅下降。\n**什么时候能看到检测结果数据**：即时可以看到（依赖历史数据足够的情况下），注意Flow接入大概要5分钟\n\n**额外规则**：\n- 单个指标的异常不会检出，需要机器多个指标同时波动才有可能检出异常，其中CPU、MEM、DISK、IO使用率只有超过50%才可能检出对应指标的异常\n- 对于常数值指标(包括全0指标)，不会检测出异常\n\n- 周期性的异常只有第一次会产生告警，后续将不会被检出，如周期性的主机重启 ',
            description='',
            is_default=False,
            instruction='### 算法说明\n\nmultivariate_anomaly_detection是一种采用时间序列特征提取和VAE变分自编码器的多指标异常检测框架。\n\nmultivariate_anomaly_detection通过对单个实体的多个指标进行并行处理，提取异常特征与学习异常模式，本方案创新性的引入了主动学习的方法，能够有效的通过反馈样本来提升模型的检测效果，适合大型在线实体的异常数据检测。\n\nmultivariate_anomaly_detection会根据数据本身的异常情况，对告警进行定级（严重、轻微等）\n\n### 算法原理\n\nmultivariate_anomaly_detection多指标异常检测流程分为异常模式提取和半监督模型异常检测两部分。\n\n在异常模式提取阶段，基于周期窗口、极值理论、残差理论等，从待检测时间序列数据中提取各类能全面表征数据异常模式的特征。\n\n在异常检测阶段，采用基于主动学习的般监督VAE模型，对多指标数据进行同步异常识别。通过数据回流和主动学习的方法，使得能够兼容各类数据模式和用户偏好，从而达到最优的异常检测效果。 ',
            variable_info={'parameter': [{'variable_name': '$alert_levels', 'variable_alias': '告警级别', 'variable_type': 'parameter', 'value_type': 'string', 'default_value': '1,2,3', 'variable_value': '1,2,3', 'constraint': [[{'allow_null': False, 'input_type': 'string'}]], 'description': '', 'sensitivity': 'public', 'properties': {'is_required': True}}, {'variable_name': '$ignore_periodic', 'variable_alias': '忽略周期型告警', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '1', 'variable_value': '1', 'constraint': [[{'input_type': 'int', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'int', 'max': '1', 'min': None, 'closed': 'right'}]], 'description': '', 'sensitivity': 'public', 'properties': {'is_required': False}}, {'variable_name': '$metric_list', 'variable_alias': '待检测指标名', 'variable_type': 'parameter', 'value_type': 'text', 'default_value': 'system__cpu_detail__usage,system__load__load5,system__mem__pct_used,system__mem__psc_pct_used,system__net__speed_recv,system__net__speed_sent,system__swap__pct_used,system__disk__in_use,system__io__util,system__env__procs', 'variable_value': 'system__cpu_detail__usage,system__load__load5,system__mem__pct_used,system__mem__psc_pct_used,system__net__speed_recv,system__net__speed_sent,system__swap__pct_used,system__disk__in_use,system__io__util,system__env__procs', 'constraint': [[{'allow_null': False, 'input_type': 'text'}]], 'description': '', 'sensitivity': 'public', 'properties': {'is_required': True}}, {'variable_name': '$sensitivity', 'variable_alias': '敏感度', 'variable_type': 'parameter', 'value_type': 'double', 'default_value': '5', 'variable_value': '5', 'constraint': [[{'input_type': 'double', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'double', 'max': '10', 'min': None, 'closed': 'right'}]], 'description': '', 'sensitivity': 'public', 'properties': {'is_required': True}}]},
            ts_freq=0,
            algorithm='HostAnomalyDetection',
            config={},
        ),AlgorithmChoiceConfig(
            id=5,
            alias='单指标异常检测_严格模式',
            name='general_anomaly_detection_for_crash_failure_metric',
            document='能够检测出轻微波动数据中存在的异常，敏感度越高，检测出的异常越多；敏感度越低，检测出的异常越少- 数据频率：```任意```- 历史数据长度：```2天```。充足的历史数据能使模型提取到更准确的异常特征，历史数据不足2天时，检测准确度会有所下降。- 模型生效时间：后台创建策略耗时```10分钟```，创建后即时生效。- 效果不满意？   + 对于成功率和失败率类数据，用简单的阈值可能更直接更准确   + 对于波动很强的时序数据，不妨试着调低敏感度（1-2），可以减少过于敏感的告警   + 通过反馈页面的 *反馈* 进行反馈 ',
            description='单指标异常检测_严格模式考虑了不同类型曲线（周期型、稳定型、稀疏型）的特征，可以满足机器指标、业务指标等时序数据的异常检测需求。 ',
            is_default=False,
            instruction='>**单指标异常检测_严格模式**在单指标指标检测的方案基础上，能够更敏感地检测出轻微波动数据中存在的异常\n\n**单指标异常检测_严格模式**考虑了不同类型曲线（```周期型```、```稳定型```、```稀疏型```）的特征，可以满足```机器指标```、```业务指标```等时序数据的异常检测需求。\n\n**单指标异常检测_严格模式**的检测流程分为```异常模式提取```和```有监督异常检测```两部分：\n\n- 在```异常模式提取```阶段，基于概率论、极值理论、残差理论等，从时序数据中提取能多方面表征数据异常模式的特征。\n- 在```有监督异常检测```阶段，采用基于主动学习的深度贝叶斯模型，能够在异常检测的同时，根据用户反馈学习未知的异常模式和部分用户偏好。 ',
            variable_info={'parameter': [{'variable_name': '$alert_down', 'variable_alias': '下降异常', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '1', 'variable_value': '1', 'constraint': [[{'input_type': 'int', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'int', 'max': '1', 'min': None, 'closed': 'right'}]], 'description': '若不希望收到下降异常告警，请关闭', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '检测到下降异常时进行告警', 'multiple': False}}, {'variable_name': '$alert_slight_shake', 'variable_alias': '轻微抖动异常', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '0', 'variable_value': '0', 'constraint': [[{'input_type': 'int', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'int', 'max': '1', 'min': None, 'closed': 'right'}]], 'description': '若希望收到轻微抖动异常告警，请打开', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '若希望收到轻微抖动异常告警，请打开', 'multiple': False}}, {'variable_name': '$alert_upward', 'variable_alias': '上升异常', 'variable_type': 'parameter', 'value_type': 'int', 'default_value': '1', 'variable_value': '1', 'constraint': [[{'input_type': 'int', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'int', 'max': '1', 'min': None, 'closed': 'right'}]], 'description': '若不希望收到上升异常告警，请关闭', 'sensitivity': 'public', 'properties': {'input_type': 'switch', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [{'allowed_value': 0, 'allowed_alias': '否', 'description': '否'}, {'allowed_value': 1, 'allowed_alias': '是', 'description': '是'}], 'used_by': 'user', 'closed': None, 'is_required': False, 'placeholder': '检测到上升异常时进行告警', 'multiple': False}}, {'variable_name': '$sensitivity', 'variable_alias': '敏感度', 'variable_type': 'parameter', 'value_type': 'double', 'default_value': '5', 'variable_value': '5', 'constraint': [[{'input_type': 'double', 'max': None, 'min': '0', 'closed': 'left'}, {'input_type': 'double', 'max': '10', 'min': None, 'closed': 'right'}]], 'description': '敏感度越高，告警越多。对于平滑曲线，建议使用默认敏感度；对于波动曲线，建议调低敏感度', 'sensitivity': 'public', 'properties': {'input_type': 'range', 'support': True, 'allow_null': False, 'allow_modified': True, 'is_advanced': False, 'allowed_values_map': [], 'used_by': 'user', 'max': 10, 'min': 0, 'closed': 'all', 'is_required': False, 'placeholder': '敏感度越高告警越多，敏感度越低告警越少', 'multiple': False}}]},
            ts_freq=0,
            algorithm='IntelligentDetect',
            config={},
        )

    ]
    AlgorithmChoiceConfig.objects.bulk_create(config_list)
class Migration(migrations.Migration):

    dependencies = [
        ('bkmonitor', '0177_apiauthtoken_bk_tenant_id'),
    ]
    operations = [
        migrations.CreateModel(
            name='AlgorithmChoiceConfig',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('alias', models.CharField(max_length=64, verbose_name='中文名称')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('document', models.TextField(blank=True, null=True, verbose_name='使用说明')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否默认')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='方案描述')),
                ('variable_info', models.JSONField(blank=True, default=dict, null=True, verbose_name='参数变量')),
                ('ts_freq', models.IntegerField(default=0, verbose_name='数据频率')),
                ('algorithm', models.CharField(choices=[('Threshold', '静态阈值算法'), ('SimpleRingRatio', '简易环比算法'), ('AdvancedRingRatio', '高级环比算法'), ('SimpleYearRound', '简易同比算法'), ('AdvancedYearRound', '高级同比算法'), ('PartialNodes', '部分节点数算法'), ('OsRestart', '主机重启算法'), ('ProcPort', '进程端口算法'), ('PingUnreachable', 'Ping不可达算法'), ('YearRoundAmplitude', '同比振幅算法'), ('YearRoundRange', '同比区间算法'), ('RingRatioAmplitude', '环比振幅算法'), ('IntelligentDetect', '智能异常检测算法'), ('TimeSeriesForecasting', '时序预测算法'), ('AbnormalCluster', '离群检测算法'), ('MultivariateAnomalyDetection', '多指标异常检测算法'), ('HostAnomalyDetection', '主机异常检测算法')], db_index=True, max_length=64, verbose_name='算法类型')),
                ('config', models.JSONField(default=dict, verbose_name='其他配置信息')),
            ],
            options={
                'verbose_name': '算法类型配置',
                'verbose_name_plural': '算法类型配置',
                'db_table': 'algorithm_choice_config',
            },
        ),
        migrations.RunPython(insert_initial_data),
    ]
