# Generated by Django 3.2.15 on 2024-10-28 09:57

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('metadata', '0191_auto_20241016_1125'),
    ]

    operations = [
        migrations.CreateModel(
            name='BkBaseResultTable',
            fields=[
                (
                    'data_link_name',
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name='链路名称',
                    ),
                ),
                (
                    'bkbase_data_name',
                    models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='计算平台数据源名称'),
                ),
                (
                    'storage_type',
                    models.CharField(
                        choices=[
                            ('influxdb', 'influxDB'),
                            ('kafka', 'kafka'),
                            ('redis', 'redis'),
                            ('elasticsearch', 'elasticsearch'),
                            ('argus', 'argus'),
                            ('victoria_metrics', 'victoria_metrics'),
                        ],
                        default='victoria_metrics',
                        max_length=32,
                        verbose_name='存储类型',
                    ),
                ),
                ('monitor_table_id', models.CharField(max_length=128, verbose_name='监控平台结果表ID')),
                ('storage_cluster_id', models.IntegerField(blank=True, null=True, verbose_name='存储集群ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                (
                    'status',
                    models.CharField(
                        choices=[('Initializing', '初始化中'), ('Creating', '创建中'), ('Pending', '等待中'), ('Ok', '已就绪')],
                        default='Initializing',
                        max_length=64,
                        verbose_name='状态',
                    ),
                ),
                ('bkbase_table_id', models.IntegerField(blank=True, null=True, verbose_name='计算平台结果表ID')),
            ],
            options={
                'verbose_name': '接入计算平台记录表',
                'verbose_name_plural': '接入计算平台记录表',
            },
        ),
        migrations.CreateModel(
            name='ConditionalSinkConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.CharField(default='bkmonitor', max_length=64, verbose_name='命名空间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('status', models.CharField(max_length=64, verbose_name='状态')),
                ('data_link_name', models.CharField(max_length=64, verbose_name='数据链路名称')),
                ('bk_biz_id', models.BigIntegerField(default=0, verbose_name='业务ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='条件处理配置名称')),
            ],
            options={
                'verbose_name': '条件处理配置',
                'verbose_name_plural': '条件处理配置',
            },
        ),
        migrations.CreateModel(
            name='DataBusConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.CharField(default='bkmonitor', max_length=64, verbose_name='命名空间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('status', models.CharField(max_length=64, verbose_name='状态')),
                ('data_link_name', models.CharField(max_length=64, verbose_name='数据链路名称')),
                ('bk_biz_id', models.BigIntegerField(default=0, verbose_name='业务ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='清洗任务名称')),
                ('data_id_name', models.CharField(max_length=64, verbose_name='关联消费数据源名称')),
            ],
            options={
                'verbose_name': '清洗任务配置',
                'verbose_name_plural': '清洗任务配置',
            },
        ),
        migrations.CreateModel(
            name='DataIdConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.CharField(default='bkmonitor', max_length=64, verbose_name='命名空间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('status', models.CharField(max_length=64, verbose_name='状态')),
                ('data_link_name', models.CharField(max_length=64, verbose_name='数据链路名称')),
                ('bk_biz_id', models.BigIntegerField(default=0, verbose_name='业务ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='数据源名称')),
            ],
            options={
                'verbose_name': '数据源配置',
                'verbose_name_plural': '数据源配置',
            },
        ),
        migrations.CreateModel(
            name='DataLink',
            fields=[
                (
                    'data_link_name',
                    models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='链路名称'),
                ),
                ('namespace', models.CharField(default='bkmonitor', max_length=255, verbose_name='命名空间')),
                (
                    'data_link_strategy',
                    models.CharField(
                        choices=[
                            ('bk_standard_v2_time_series', '标准单指标单表时序数据链路'),
                            ('bcs_federal_proxy_time_series', '联邦代理时序数据链路'),
                            ('bcs_federal_subset_time_series', '联邦子集时序数据链路'),
                        ],
                        max_length=255,
                        verbose_name='链路策略',
                    ),
                ),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
            ],
            options={
                'verbose_name': '数据链路',
                'verbose_name_plural': '数据链路',
            },
        ),
        migrations.CreateModel(
            name='VMResultTableConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.CharField(default='bkmonitor', max_length=64, verbose_name='命名空间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('status', models.CharField(max_length=64, verbose_name='状态')),
                ('data_link_name', models.CharField(max_length=64, verbose_name='数据链路名称')),
                ('bk_biz_id', models.BigIntegerField(default=0, verbose_name='业务ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='结果表名称')),
                ('data_type', models.CharField(default='metric', max_length=64, verbose_name='结果表类型')),
            ],
            options={
                'verbose_name': 'VM结果表配置',
                'verbose_name_plural': 'VM结果表配置',
            },
        ),
        migrations.CreateModel(
            name='VMStorageBindingConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.CharField(default='bkmonitor', max_length=64, verbose_name='命名空间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modify_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('status', models.CharField(max_length=64, verbose_name='状态')),
                ('data_link_name', models.CharField(max_length=64, verbose_name='数据链路名称')),
                ('bk_biz_id', models.BigIntegerField(default=0, verbose_name='业务ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='存储配置名称')),
                ('vm_cluster_name', models.CharField(max_length=64, verbose_name='VM集群名称')),
            ],
            options={
                'verbose_name': 'VM存储配置',
                'verbose_name_plural': 'VM存储配置',
            },
        ),
    ]
