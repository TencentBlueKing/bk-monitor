# -*- coding: utf-8 -*-
"""
Tencent is pleased to support the open source community by making 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
Copyright (C) 2017-2025 Tencent. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 1.11.23 on 2020-06-15 07:23


from django.db import migrations

models = {
    "DataSource": None,
    "DataSourceResultTable": None,
    "ResultTable": None,
    "ResultTableField": None,
    "ClusterInfo": None,
    "KafkaTopicInfo": None,
    "InfluxDBStorage": None,
}


def add_resulttablefield(models, table_id, field_item_list, user):
    for item in field_item_list:
        models["ResultTableField"].objects.create(
            table_id=table_id,
            field_name=item["field_name"],
            field_type=item["field_type"],
            unit=item["unit"],
            tag=item["tag"],
            is_config_by_user=1,
            creator=user,
            description=item["description"],
        )


def add_ping_datasource(apps, *args, **kwargs):
    """追加ping的初始化数据"""

    # 获取APP models
    for model_name in list(models.keys()):
        models[model_name] = apps.get_model("metadata", model_name)

    # 数据库记录的操作员
    user = "system"
    # 结果表id
    table_id = "uptimecheck.icmp"

    field_item_list = [
        {"field_name": "available", "field_type": "double", "unit": "", "tag": "metric", "description": "丢包率"},
        {"field_name": "task_duration", "field_type": "double", "unit": "ms", "tag": "metric", "description": "最大时延"},
    ]
    add_resulttablefield(models, table_id, field_item_list, user)


class Migration(migrations.Migration):

    dependencies = [
        ("metadata", "0060_add_ping_datasource"),
        ("metadata", "0061_add_system_net_field"),
    ]

    operations = [migrations.RunPython(add_ping_datasource)]
