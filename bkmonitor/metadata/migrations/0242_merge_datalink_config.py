# Generated by Django 3.2.25 on 2025-10-20 08:10

from django.db import migrations


def merge_datalink_config(apps, schema_editor):
    """
    合并数据链路配置表：
    1. LogResultTableConfig -> ResultTableConfig
    2. LogDataBusConfig -> DataBusConfig
    """
    DataBusConfig = apps.get_model("metadata", "DataBusConfig")
    LogDataBusConfig = apps.get_model("metadata", "LogDataBusConfig")
    ResultTableConfig = apps.get_model("metadata", "ResultTableConfig")
    LogResultTableConfig = apps.get_model("metadata", "LogResultTableConfig")

    # 1. 迁移 LogResultTableConfig -> ResultTableConfig
    log_result_table_configs = LogResultTableConfig.objects.all()
    migrated_count = 0
    skipped_count = 0

    for log_rt_config in log_result_table_configs:
        # 检查目标表中是否已存在相同 name + bk_tenant_id 的记录
        if ResultTableConfig.objects.filter(
            name=log_rt_config.name, namespace=log_rt_config.namespace, bk_tenant_id=log_rt_config.bk_tenant_id
        ).exists():
            skipped_count += 1
            continue

        # 创建新的ResultTableConfig记录
        ResultTableConfig.objects.create(
            name=log_rt_config.name,
            namespace=log_rt_config.namespace,
            status=log_rt_config.status,
            data_link_name=log_rt_config.data_link_name,
            bk_biz_id=log_rt_config.bk_biz_id,
            bk_tenant_id=log_rt_config.bk_tenant_id,
            data_type=log_rt_config.data_type,
        )
        migrated_count += 1

    print(f"LogResultTableConfig迁移完成: 迁移 {migrated_count} 条记录, 跳过 {skipped_count} 条重复记录")

    # 2. 迁移 LogDataBusConfig -> DataBusConfig
    log_databus_configs = LogDataBusConfig.objects.all()
    migrated_count = 0
    skipped_count = 0

    for log_db_config in log_databus_configs:
        # 检查目标表中是否已存在相同 name + bk_tenant_id 的记录
        if DataBusConfig.objects.filter(
            name=log_db_config.name, namespace=log_db_config.namespace, bk_tenant_id=log_db_config.bk_tenant_id
        ).exists():
            skipped_count += 1
            continue

        # 创建新的DataBusConfig记录
        DataBusConfig.objects.create(
            name=log_db_config.name,
            namespace=log_db_config.namespace,
            status=log_db_config.status,
            data_link_name=log_db_config.data_link_name,
            bk_biz_id=log_db_config.bk_biz_id,
            bk_tenant_id=log_db_config.bk_tenant_id,
            data_id_name=log_db_config.data_id_name,
        )
        migrated_count += 1

    print(f"LogDataBusConfig迁移完成: 迁移 {migrated_count} 条记录, 跳过 {skipped_count} 条重复记录")


class Migration(migrations.Migration):
    dependencies = [("metadata", "0241_auto_20251020_1609")]

    operations = [migrations.RunPython(merge_datalink_config)]
