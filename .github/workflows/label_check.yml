---
name: Label Checker
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:
  check_project_label:
    name: 检查项目标签
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check project label
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: project/monitor,project/apm,project/log,project/public
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Comment on failure
        if: ${{ failure() }}
        run: |
          # 获取当前 PR 的信息
          export PR_NUMBER=$(echo "${{ github.event.pull_request.url }}" | awk -F'/' '{print $NF}')

          # 发出评论消息
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"body": "Your comment message"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
#      - name: Comment when failed
#        uses: mb2dev/github-action-comment-pull-request@1.0.0
#        if: ${{ failure() }}
#        with:
#          message: "请在 PR 中添加项目标签，例如：`project/monitor`、`project/apm`、`project/log`、`project/public`"
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#  check_type_label:
#    name: 检查类型标签
#    runs-on: ubuntu-latest
#    permissions:
#      pull-requests: write
#    steps:
#      - name: Check type label
#        uses: docker://agilepathway/pull-request-label-checker:latest
#        with:
#          one_of: fix,feat,docs,style,refactor,test,chore,merge
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Comment when failed
#        uses: mb2dev/github-action-comment-pull-request@1.0.0
#        if: ${{ failure() }}
#        with:
#          message: "请在 PR 中添加类型标签，例如：`fix`、`feat`、`docs`、`style`、`refactor`、`test`、`chore`、`merge`"
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
